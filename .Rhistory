calcPredictionError <-
function (gp, newData, nugget = 0)
{
print('new ish')
r = calcCorOneObs(gp$X, gp$beta, gp$a, newData)
v = gp$sig2 + nugget - gp$sig2 * r %*% gp$invVarMatrix %*%
t(r) * gp$sig2
if (v < 0)
return(0)
return(sqrt(v))
}
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
X <- matrix(runif(50),50,1)
Z <- sin(2*pi*X)+rnorm(50,0,.1)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=FALSE)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1),se.fit = T)
calcPredictionError
calcPredictionError(mod,X)
mlegp::calcPredictionError(mod,X)
calcPredictionError <-
function (gp, newData, nugget = 0)
{
print('new ish')
r = calcCorOneObs(gp$X, gp$beta, gp$a, newData)
v = gp$sig2 + nugget - gp$sig2 * r %*% gp$invVarMatrix %*%
t(r) * gp$sig2
print((1- sum(solve(gp$invVarMatrix,r)))^2 / (sum(gp$invVarMatrix)))
if (v < 0)
return(0)
return(sqrt(v))
}
calcPredictionError(mod,X)
calcPredictionError <-
function (gp, newData, nugget = 0)
{
print('new ish')
r = calcCorOneObs(gp$X, gp$beta, gp$a, newData)
v = gp$sig2 + nugget - gp$sig2 * r %*% gp$invVarMatrix %*%
t(r) * gp$sig2
print((1- sum(solve(gp$invVarMatrix,t(r))))^2 / (sum(gp$invVarMatrix)))
if (v < 0)
return(0)
return(sqrt(v))
}
calcPredictionError(mod,X)
data.frame( x1 = c(2.23,2.57,3.87,3.1,3.39,2.83,3.02,2.14,3.04,3.26,3.39,2.35,2.76,3.9,3.16),
x2 = c(9.66,8.94,4.4,6.64,4.91,8.52,8.04,9.05,7.71,5.11,5.05,8.51,6.59,4.9,6.96),
y  = c(12.37,12.66,12,11.93,11.06,13.03,13.13,11.44,12.86,10.84,11.2,11.56,10.83,12.63,12.46)
)
ham <- data.frame( x1 = c(2.23,2.57,3.87,3.1,3.39,2.83,3.02,2.14,3.04,3.26,3.39,2.35,2.76,3.9,3.16),
x2 = c(9.66,8.94,4.4,6.64,4.91,8.52,8.04,9.05,7.71,5.11,5.05,8.51,6.59,4.9,6.96),
y  = c(12.37,12.66,12,11.93,11.06,13.03,13.13,11.44,12.86,10.84,11.2,11.56,10.83,12.63,12.46)
)
pairs(ham)
cor(ham)
lm(y ~ ., ham)
summary(lm.ham)
lm.ham <- lm(y ~ ., ham)
summary(lm.ham)
n <- 20
ssep <- c(950,720,630,540,595,425,510,400)
mst <- ssep[1]/(n-1)
p <- c(0,1,1,1,2,2,2,3)
errordf <- n-(p+1)
msep <- ssep/errordf
r2adjp <- 1 - msep / mst
r2adjp
sig2hat <- msep[length(msep)]
Cp <- ssep/sig2hat + 2*(p+1) - n
Cp
library(knitr)
knitr::kable(ham)
r2adjp <- 1 - msep / mst
sig2hat <- msep[length(msep)]
Cp <- ssep/sig2hat + 2*(p+1) - n
AICp <- n*log(ssep/n) + 2*(p+1)
tabledat <- data.frame('$SSE_p$'=ssep,p,errordf,msep,r2adjp,Cp,AICp)
tabledat
variablesinmodel <- c('None','$x_1$','$x_2$','$x_3$','$x_1$,$x_2$','$x_1$,$x_3$','$x_2$,$x_3$','$x_1$,$x_2$,$x_3$')
n <- 20
ssep <- c(950,720,630,540,595,425,510,400)
mst <- ssep[1]/(n-1)
p <- c(0,1,1,1,2,2,2,3)
errordf <- n-(p+1)
msep <- ssep/errordf
r2adjp <- 1 - msep / mst
sig2hat <- msep[length(msep)]
Cp <- ssep/sig2hat + 2*(p+1) - n
AICp <- n*log(ssep/n) + 2*(p+1)
tabledat <- data.frame(variablesinmodel,ssep,p,errordf,msep,r2adjp,Cp,AICp)
knitr::kable(tabledat,col.names = c('$SSE_p$','$p$', 'Error d.f.' , 'MSE$_p$' , '$R^2_{adj,p}$', '$C_p$' ,'AIC$_p$'),align='l')
pairs(ham)
cor(ham)
lm.ham <- lm(y ~ ., ham)
summary(lm.ham)
summary(lm(y~x1,ham))
summary(lm(y~x2,ham))
cor(ham)
lm.ham
3.097*ham$x1 + 1.032*ham$x2
ham
3.097*ham$x1 + 1.032*ham$x2
cars
str(cars)
((ssep[2:4] - ssep[1])/1)/(ssep[2:4/(n-(1+1)))
((ssep[2:4] - ssep[1])/1)/(ssep[2:4/(n-(1+1))
((ssep[2:4] - ssep[1])/1)
((ssep[2:4] - ssep[1])/1)/(ssep[2:4/(n-(1+1)))
(ssep[2:4/(n-(1+1)))
((ssep[2:4] - ssep[1])/1)/(ssep[2:4]/(n-(1+1)))
((ssep[1] - ssep[2:4])/1)/(ssep[2:4]/(n-(1+1)))
((ssep[1] - ssep[6:7])/1)/(ssep[6:7]/(n-(2+1)))
((ssep[4] - ssep[6:7])/1)/(ssep[6:7]/(n-(2+1)))
((ssep[1] - ssep[2:4])/1)/(ssep[2:4]/(n-(1+1)))
((ssep[4] - ssep[6:7])/1)/(ssep[6:7]/(n-(2+1)))
((ssep[2] - ssep[6])/1)/(ssep[6]/(n-(2+1)))
((ssep[6] - ssep[8])/1)/(ssep[8]/(n-(2+1)))
library(glmnet)
car
cars
citation('stats')
x <- c(.0006,.04,30,900)
stripchart(X)
stripchart(x)
x <- c(.0006,.04,30,350,900)
stripchart(x)
stripchart(x,xact='n')
stripchart(x,xaxt='n')
warnings()
axis(1, at=1:10, labels=letters[1:10])
axis(1, at=c(.05,500), labels=letters[1:2])
stripchart(x,xaxt='n')
xaxisat = c(.05,500)
xaxisat = c(.05,500)
axis(1, at=xaxisat, labels=xaxisat)
stripchart(x,xaxt='n')
stripchart(x,xaxt='y')
stripchart(x,xaxt=NULL)
abcdef <- NULL
abcdef
stripchart(x,xaxt='n')
xaxisat = NULL
axis(1, at=xaxisat, labels=xaxisat)
stripchart(x)
x <- c(.0006,.04,30,350,900,3800,11000)
stripchart(x,xaxt='n')
stripchart(x)
x <- c(.0006,.04,30,350,900,3800,11000,56911)
stripchart(x,xaxt='n')
stripchart(x)
x <- c(.0006,.04,30,350,900,3800,11000,56911,200000)
stripchart(x,xaxt='n')
stripchart(x)
format(x,scientific = F)
axis(1, at=xaxisat, labels=xaxisat)
x <- c(.0006,.04,30,350,900,3800,11000,56911,200000,1e10)
stripchart(x,xaxt='n')
stripchart(x)
axis(1, at=xaxisat, labels=xaxisat)
options()
options()$scipen
stripchart(x)
stripchart(x,xaxt='n')
xaxisat = c(.05,500)
axis(1, at=xaxisat, labels=xaxisat)
x <- c(.0006,.04,30,350)#,900,3800,11000,56911,200000,1e10)
stripchart(x,xaxt='n')
axis(1, at=xaxisat, labels=xaxisat)
x <- c(.0006,.04,30,350,900)#,3800,11000,56911,200000,1e10)
stripchart(x,xaxt='n')
axis(1, at=xaxisat, labels=xaxisat)
axis(1, at=xaxisat, labels=xaxisat,cex.axis=4)
library(lhs)
citation(lhs)
citation('lhs')
x1 = c(0,0)
x2 = c(1,1)
X = rbind(x1,x2)
plot(X)
m2 <- function(xx){sum(xx^2)}
b = (m2(x2)-m2(x1)) / m2(x1-x2)
b
m2(x1-x2)
m2(x2-x1)
mu = 4 / m2(x1-x2)
w = 2*(x1-x2) / m2(x1-x2)
w
pf <- function(xx){sum(xx*w)+b}
pf(x1)
pf(x2)
pf(c(.5,.5))
pf(c(1,0))
pf(c(0,1))
pf(c(0,100))
rep(1:6,3)
n <- 10
d <- 2
m <- matrix(rep(1:n,d),n,d)
m
sample(1:6)
m <- apply(m,2,function(xx){sample(xx)})
m
plot(m)
source('~/.active-rstudio-document')
plot(simple.LHS(20,1))
plot(simple.LHS(20,2))
matrix(1:6,2,3)
matrix(1:6,2,3)-runif(6)
source('~/.active-rstudio-document')
plot(simple.LHS(5,2))
plot(simple.LHS(5,2),xlim=0:1,ylim=0:1)
plot(simple.LHS(10,2),xlim=0:1,ylim=0:1)
m <- simple.LHS(10,2)
plot(m,xlim=0:1,ylim=0:1)
m
plot(simple.LHS(10,2),xlim=0:1,ylim=0:1)
plot(simple.LHS(10,2),xlim=0:1,ylim=0:1)
plot(simple.LHS(10,2),xlim=0:1,ylim=0:1)
plot(simple.LHS(10,2),xlim=0:1,ylim=0:1)
plot(simple.LHS(10,2),xlim=0:1,ylim=0:1)
plot(simple.LHS(10,2),xlim=0:1,ylim=0:1)
cor(m)
lhs::maximinLHS
install.packages("pitchRx")
library('pitchRx')
dat <- scrape('2016-05-01','2016-05-10')
str(dat)
plot(dat$pitch$px[1:100],dat$pitch$pz[1:100])
plot(dat$pitch$px[1:100],dat$pitch$pz[1:100],col='red')
names(dat$pitch)
head(dat$pitch)
plot(dat$pitch$px[1:100],dat$pitch$pz[1:100],col=factor(dat$pitch$type))
plot(dat$pitch$px[1:1000],dat$pitch$pz[1:1000],col=factor(dat$pitch$type))
plot(dat$pitch$pfx_x[1:1000],dat$pitch$pfx_z[1:1000],col=factor(dat$pitch$type))
summary(dat$pitch$y0)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
Colorado.xlim <- c(-109.054831,-102.056540)
Colorado.ylim <- c(36.996650,40.999198)
X.Colorado <- t(apply(X.LHS,1,function(xrow) return(c(xrow[1]*(Colorado.xlim[2]-Colorado.xlim[1])+Colorado.xlim[1],xrow[2]*(Colorado.ylim[2]-Colorado.ylim[1])+Colorado.ylim[1]))))
X.LHS <- lhs::maximinLHS(n=40,k=2)
X.LHS
X.Colorado <- t(apply(X.LHS,1,function(xrow) return(c(xrow[1]*(Colorado.xlim[2]-Colorado.xlim[1])+Colorado.xlim[1],xrow[2]*(Colorado.ylim[2]-Colorado.ylim[1])+Colorado.ylim[1]))))
str(X.Colorado)
X.Colorado
get.elevation(c(40,-100))
scale(1,2,3)
scale(1:5,5,300)
X.LHS
dim(X.LHS)
rescale2D <- function(x,xlim,ylim) {
if (dim(x)[2] != 2) {stop('x must have two columns')}
x[,1] <- xlim[1] + x[,1]*(xlim[2] - xlim[1])
x[,2] <- ylim[1] + x[,2]*(ylim[2] - ylim[1])
return(x)
}
rescale2D(data.frame(x=1:4,y=2:5),c(-1,1),c(100,200))
rescale2D <- function(x,xlim,ylim) {
if (dim(x)[2] != 2) {stop('x must have two columns')}
x[,1] <- (x[,1] - xlim[1]) / (xlim[2] - xlim[1])
x[,2] <- (x[,2] - ylim[1]) / (ylim[2] - ylim[1])
return(x)
}
rescale2D(data.frame(x=1:4,y=2:5),c(-1,1),c(100,200))
rescale1D <- function(x,xlim) {
(x-min(x))/(max(x)-min(x)) * (xlim[2] - xlim[1]) + xlim[1]
}
rescale1D(1:5,0:1)
rescale1D(1:5,9:10)
rescale2D <- function(x,xlim,ylim) {
if (dim(x)[2] != 2) {stop('x must have two columns')}
x[,1] <- rescale1D(x[,1],xlim)
x[,2] <- rescale1D(x[,2],ylim)
return(x)
}
rescale2D(data.frame(x=1:4,y=2:5),c(-1,1),c(100,200))
rescale2D(X.LHS,Colorado.xlim,Colorado.ylim)
cbind(rescale2D(X.LHS,Colorado.xlim,Colorado.ylim),X.Colorado)
X.LHS
cbind(rescale2D(X.LHS,Colorado.xlim,Colorado.ylim),X.Colorado)
apply(X.LHS,2,max)
apply(X.LHS,2,min)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
require(XML)
elev_url <- "https://maps.googleapis.com/maps/api/elevation/xml?locations=39.7391536,-104.9847034|36.455556,-116.866667&key=AIzaSyDpHsTEEAWJqE1MbWnMjwJI_Yo54CUviw0"
elev_html <- getURL(elev_url)
elev_xml <- xmlParse(elev_html)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
elev_html <- getURL(elev_url)
elev_html <- RCurl::getURL(elev_url)
elev_xml <- xmlParse(elev_html)
elev_xml
elev_xml[1]
elev_xml <- xmlTreeParse(elev_html)
lat <-  elev_xml[[1]][[1]][[2]][[1]][[1]][[1]]
lat
xmlToDataFrame(elev_xml)
elev_xml <- xmlParse(elev_html)
xmlToDataFrame(elev_xml)
xmlToDataFrame(nodes = xmlChildren(xmlRoot(elev_xml)[["data"]]))
xmlRoot(elev_xml)
xmlRoot(elev_xml)[['result']]
xmlToDataFrame(nodes = xmlChildren(xmlRoot(elev_xml)[["result"]]))
xmlToDataFrame(nodes = getNodeSet((elev_xml)[["result"]]))
xmlToDataFrame(nodes = getNodeSet((elev_xml),'/result'))
xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/elevation'))
resols <- xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/resolution'))
resols
xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/location/lat'))
elevs <- xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/elevation'))
longs <- xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/location/lng'))
data.frame(lats,longs,elevs,resols)
lats <- xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/location/lat'))
data.frame(lats,longs,elevs,resols)
data.frame(lat=lats,lng=longs,elev=elevs,res=resols)
xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/elevation'))
unname(xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/elevation')))
elevs <- unname(xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/elevation')))
data.frame(lat=lats,lng=longs,elev=elevs,res=resols)
elevs <- unname(xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/elevation')))
resols <- unname(xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/resolution')))
lats <- unname(xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/location/lat')))
longs <- unname(xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/location/lng')))
data.frame(lat=lats,lng=longs,elev=elevs,res=resols)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
Colorado.xlim <- c(-109.054831,-102.056540)
Colorado.ylim <- c(36.996650,40.999198)
X.LHS <- lhs::maximinLHS(n=40,k=2)
X.Colorado <- t(apply(X.LHS,1,function(xrow) return(c(xrow[1]*(Colorado.xlim[2]-Colorado.xlim[1])+Colorado.xlim[1],xrow[2]*(Colorado.ylim[2]-Colorado.ylim[1])+Colorado.ylim[1]))))
my.filled.contour.func(get.elevation,n=9,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/myfilledcontour.R')
my.filled.contour.func(get.elevation,n=9,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90)
require(RCurl)
my.filled.contour.func(get.elevation,n=9,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90)
elev_df
unname(xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/elevation')))
elev_parse <- xmlParse(elev_html)
elevs <- unname(xmlToDataFrame(nodes = getNodeSet((elev_xml),'//result/elevation')))
elev_parse
elevs <- unname(xmlToDataFrame(nodes = getNodeSet((elev_parse),'//result/elevation')))
elevs
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
get.elevation(X = X.Colorado)
elev_df
data.frame(lat=lats,lng=longs,elev=elevs,res=resols)
cbind(data.frame(lat=lats,lng=longs,elev=elevs,res=resols),elev_df)
elev_parse
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'))
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'))[1]
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'))=='OK'
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'))[1]=='ok'
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'))$test[1]
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'))$text[1]
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'))$text[1]=='OK'
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
get.elevation(X = X.Colorado)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
get.elevation(X = X.Colorado)
status
unname(xmlToDataFrame(nodes = getNodeSet((elev_parse),'//result/elevation')))
str(unname(xmlToDataFrame(nodes = getNodeSet((elev_parse),'//result/elevation'))))
str(unname(xmlToDataFrame(nodes = getNodeSet((elev_parse),'//result/elevation')),stringsAsFactors=F))
str(unname(xmlToDataFrame(nodes = getNodeSet((elev_parse),'//result/elevation'),stringsAsFactors = F)))
str(unname(xmlToDataFrame(nodes = getNodeSet((elev_parse),'//result/elevation'),colClasses = 'numeric')))
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'))
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'),colClasses = 'chr')
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'),colClasses = 'character')
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
get.elevation(X = X.Colorado)
status
str(status)
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'),colClasses = 'character')
xmlToDataFrame(nodes = getNodeSet((elev_parse),'//status'),stringsAsFactors = F)
get.elevation(X = X.Colorado)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
get.elevation(X = X.Colorado)
str(status)
str(elev_df)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
X.Colorado
rbind(X.Colorado,X.Colorado,X.Colorado)
rbind(X.Colorado,X.Colorado,X.Colorado,X.Colorado)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
get.elevation(X = rbind(X.Colorado,X.Colorado,X.Colorado,X.Colorado))
get.elevation(X = rbind(X.Colorado,X.Colorado,X.Colorado,X.Colorado))
elev_html
get.elevation(X = rbind(X.Colorado,X.Colorado,X.Colorado,X.Colorado))
xmlParse(elev_html)
elev_html
RCurl::parseHTTPHeader(elev_html)
elev_html
grep(pattern = 'illegal request',x = elev_html)
grep(pattern = 'illegal request',x = 'abcdef')
grep(pattern = 'illegal request',x = paste(elev_html,elevhtml))
grep(pattern = 'illegal request',x = paste(elev_html,elev_html))
grep1(pattern = 'illegal request',x = paste(elev_html,elev_html))
grepl(pattern = 'illegal request',x = paste(elev_html,elev_html))
grepl(pattern = 'illegal request',x = 'abddefasdgasgasdfsdsd')
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/Elevation_get.R')
get.elevation(X = rbind(X.Colorado,X.Colorado,X.Colorado,X.Colorado))
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_1D.R')
SMED_1D(function(xx)dbeta(xx,4,2),n=30)
SMED_1D(dnorm,xmin=-3,xmax=3,n=30)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_2D.R')
SMED_2D(banana,n=10,max.time=.2)
source('C:/Users/cbe117/School/DOE/Codes/contour/contourfilled.R')
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_2D.R')
SMED_2D(banana,n=10,max.time=.2)
setwd("C:/Users/cbe117/School/DOE/SMED/SMED-Code")
source('TestFunctions.R')
setwd("C:/Users/cbe117/School/DOE/SMED/SMED-Code")
setwd("C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code")
source('TestFunctions.R')
SMED_2D(banana,n=10,max.time=.2)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_2D.R')
SMED_2D(banana,n=10,max.time=.2)
install.packages("gensa")
install.packages("GenSA")
SMED_2D(banana,n=10,max.time=.2)
SMED_2D(banana,n=40,max.time=.2)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GP_2D.R')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GP_2D.R')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
install.packages("mlegp")
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GP_2D.R')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
install.packages("lhs")
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GP_2D.R')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
install.packages("rgenoud")
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GP_2D.R')
SMED_GP_2D(f=banana,n0=10,n=1,contour.fit=1,GP.package='mlegp')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp',continue.option=T)
SMED_GP_2D(f=banana,n0=10,n=1,contour.fit=1,GP.package='mlegp',continue.option=T)
warnings()
warnings()
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GPE_2D.R')
SMED_GP_2D(f=banana,n0=10,n=10,max.time=.2)
set.seed(0);SMED_GP_2D(f=banana,n0=30,n=1,contour.fit=1,GP.package='GPfit',continue.option=T,opt.method='LHS')
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GPE_2D.R')
set.seed(0);SMED_GP_2D(f=banana,n0=30,n=1,contour.fit=1,GP.package='GPfit',continue.option=T,opt.method='LHS')
set.seed(0);SMED_GP_2D(f=banana,n0=30,n=1,contour.fit=1,GP.package='mlegp',continue.option=T,opt.method='LHS')
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GPE_2D.R')
set.seed(0);SMED_GP_2D(f=banana,n0=30,n=1,contour.fit=1,GP.package='mlegp',continue.option=T,opt.method='LHS')
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/Elevation_get.R')
require(RCurl)
require(XML)
Colorado.xlim <- c(-109.054831,-102.056540)
Colorado.ylim <- c(36.996650,40.999198)
X.LHS <- lhs::maximinLHS(n=40,k=2)
X.Colorado <- t(apply(X.LHS,1,function(xrow) return(c(xrow[1]*(Colorado.xlim[2]-Colorado.xlim[1])+Colorado.xlim[1],xrow[2]*(Colorado.ylim[2]-Colorado.ylim[1])+Colorado.ylim[1]))))
X.Colorado2 <- rescale2D(X.LHS,Colorado.xlim,Colorado.ylim,0:1,0:1)
contour.filled.func(get.elevation,n=21,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90,out.col.name = 'elev')
contour.filled.func(get.elevation,n=41,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90,out.col.name = 'elev')
contour.filled.func(get.elevation,n=41,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90,out.col.name = 'elev')
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_1D.R')
SMED_1D(function(xx)dbeta(xx,4,2),n=30)
SMED_1D(dnorm,xmin=-3,xmax=3,n=30)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_2D.R')
source('TestFunctions.R')
SMED_2D(banana,n=10,max.time=.2)
install.packages("contourfilled")
source('C:/Users/cbe117/School/DOE/Codes/contour/contourfilled/R/contourfilled.R')
SMED_2D(banana,n=10,max.time=.2)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_2D.R')
SMED_2D(banana,n=10,max.time=.2)
SMED_2D(banana,n=40,max.time=.2)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_2D.R')
SMED_2D(banana,n=40,max.time=.2)
source('TestFunctions.R')
source('C:/Users/cbe117/School/DOE/Codes/contour/contourfilled/R/contourfilled.R')
SMED_2D(banana,n=10,max.time=.2)
SMED_2D(banana,n=40,max.time=.2)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GP_2D.R')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp',continue.option=T)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GP_2D.R')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp',continue.option=T)
warnings()
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp',continue.option=T)
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp',continue.option=T)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GPE_2D.R')
SMED_GPE_2D(f=banana,n0=10,n=10,max.time=.2)
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GPE_2D.R')
SMED_GPE_2D(f=banana,n0=10,n=10,max.time=.2)
SMED_GPE_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/SMED_GPE_2D.R')
SMED_GPE_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
warnings()
source('C:/Users/cbe117/School/DOE/Codes/SMED/SMED-Code/Elevation_get.R')
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/myfilledcontour.R')
source('C:/Users/cbe117/School/DOE/Codes/contour/contourfilled/R/contourfilled.R')
require(RCurl)
require(XML)
NWCol <- c(40.999198, -109.054831)
SECol <- c(36.996650, -102.056540)
Colorado.xlim <- c(-109.054831,-102.056540)
Colorado.ylim <- c(36.996650,40.999198)
X.LHS <- lhs::maximinLHS(n=40,k=2)
X.Colorado <- t(apply(X.LHS,1,function(xrow) return(c(xrow[1]*(Colorado.xlim[2]-Colorado.xlim[1])+Colorado.xlim[1],xrow[2]*(Colorado.ylim[2]-Colorado.ylim[1])+Colorado.ylim[1]))))
X.Colorado2 <- rescale2D(X.LHS,Colorado.xlim,Colorado.ylim,0:1,0:1)
cbind(X.Colorado,X.Colorado2)
get.elevation(c(40,-100))
my.filled.contour.func(get.elevation,n=21,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90,out.col.name = 'elev')
contour.filled.func(get.elevation,n=21,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90,out.col.name = 'elev')
contourfilled.func(get.elevation,n=21,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90,out.col.name = 'elev')
contourfilled.func(get.elevation,n=41,xcontlim=Colorado.xlim,ycontlim=Colorado.ylim,batchmax = 90,out.col.name = 'elev')
