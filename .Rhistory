samplesout
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
write.out.nba.samples(n.samples = 500)
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
function sigmoid(x){(1+exp(-x))^-1}
function sigmoid_deriv(x){sz <- sigmoid(x);sz*(1-sz)}
sigmoid <- function (x){(1+exp(-x))^-1}
sigmoid_deriv <- function(x){sz <- sigmoid(x);sz*(1-sz)}
curve(sigmoid)
curve(sigmoid,-10,10)
curve(sigmoid_deriv,-10,10)
source('~/.active-rstudio-document')
x <- matrix(c(0,0,1,0,0,1,1,1),4,2,byrow=T)
y <- matrix(c(0,1,1,0),4,1)
x
y
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
t
y
nn
nny
source('~/.active-rstudio-document')
y
nny
ifelse(t>.5,log(y),log(1-y))
cross
dy
hy
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
source('~/.active-rstudio-document')
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
list(w=c(dw1,dw2,dw3,dw4,dw5,dw6),b=c(db1,db2,db3))
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
z1
z2
dyhy
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
cross_entropy_grad(x,y,w,b)
alpha = 1
for(i in 1:100) {
ceg <- cross_entropy_grad(x,y,w,b)
w = w + alpha * ceg$w
b = b + alpha * ceg$b
}
b
w
ces <- cross_entropy(x,y,w,b)
ces
source('~/.active-rstudio-document')
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
library("numDeriv", lib.loc="~/R/win-library/3.1")
numDeriv::grad(function(ww)cross_entropy_grad(x,y,ww,b))
w <- c(-.2,.5,.2,-1,.1,1)
b <- c(0,.2,-.1)
x <- matrix(c(0,0,1,0,0,1,1,1),4,2,byrow=T)
y <- matrix(c(0,1,1,0),4,1)
cross_entropy_grad(x,y,w,b)
numDeriv::grad(function(ww)cross_entropy_grad(x,y,ww,b),w)
numDeriv::grad(function(ww)cross_entropy(x,y,ww,b),w)
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
y
dy
y
t
X
x
y
dy
db3
dy
hy
sigmoid_deriv <- function(x){sz <- sigmoid(x);sz*(1-sz)}
sigmoid_deriv2 <- function(x){exp(-z)/(1+exp(-z))^2}
curve(sigmoid_deriv)
curve(sigmoid_deriv,-5,5)
curve(sigmoid_deriv2,-5,5)
sigmoid_deriv2 <- function(z){exp(-z)/(1+exp(-z))^2}
curve(sigmoid_deriv2,-5,5)
y
sigmoid_deriv(c(-1,0,1))
hy
sigmoid_deriv(y)
exp(y)/(1+exp(-y))^2
exp(y)
exp(-y)
y
-y
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
db3
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
numDeriv::grad(function(ww)cross_entropy(x,y,ww,b),w)
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
source('C:/Users/cbe117/School/IEMS490/HW2/hw2.R')
library('mlegp')
citation('mlegp')
citation('laGP')
library(mlegp)
X <- matrix(runif(100),50,2)
Z <- matrix(runif(100),50,1)
mod <- mlegp(X=X,Z=Z)
mod
mod <- mlegp(X=X,Z=Z,nugget=1)
mod
mod <- mlegp(X=X,Z=Z,nugget=1,nugget.known=1)
mod
Z
X <- matrix(runif(100),50,2)
Z <- matrix(runif(50),50,1)
X <- matrix(runif(50),50,1)
Z <- matrix(runif(50),50,1)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=1)
plot(mod)
predict.gp(mod,seq(from=0,to=1,length.out = 100))
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
mod
X <- matrix(runif(25),50,1)
Z <- matrix(runif(50),50,1)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=1)
mod
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
predict.gp(mod,X)
plot(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)))
mod <- mlegp(X=X,Z=Z,nugget=0)
mod <- mlegp(X=X,Z=Z,nugget=1)
plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
plot(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)))
mod
names(mod)
mod$nugget
mod$beta
X <- matrix(runif(50),50,1)
Z <- sin(2*pi*X)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=1)
mod
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
plot(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)))
plot(X,Z)
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
Z <- sin(2*pi*X)+rnorm(50,0,.1)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=1)
plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod
mod <- mlegp(X=X,Z=Z,nugget=0)
#plot(mod)
plot(X,Z)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z)#,nugget=0)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z)#,nugget=0)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z)#,nugget=0)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z)#,nugget=0)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z)#,nugget=0)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=0)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=0)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=0)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod <- mlegp(X=X,Z=Z,nugget=NULL)
#plot(mod)
plot(X,Z)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=NULL)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=NULL)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
plot(X,Z)
#plot(mod)
mod <- mlegp(X=X,Z=Z,nugget=22)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=22)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=1)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
#plot(mod)
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=1e-6)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=1e-6)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=-1)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
mod <- mlegp(X=X,Z=Z,nugget=NULL)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=NULL)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=FALSE)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
points(seq(from=0,to=1,length.out = 100),predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1)),col=2)
mod$nugget
library(mlegp)
predict.gp
calcPredictionError
calcPredictionError <-
function (gp, newData, nugget = 0)
{
r = calcCorOneObs(gp$X, gp$beta, gp$a, newData)
v = gp$sig2 + nugget - gp$sig2 * r %*% gp$invVarMatrix %*%
t(r) * gp$sig2
if (v < 0)
return(0)
return(sqrt(v))
}
calcPredictionError
calcPredictionError <-
function (gp, newData, nugget = 0)
{
print('new ish')
r = calcCorOneObs(gp$X, gp$beta, gp$a, newData)
v = gp$sig2 + nugget - gp$sig2 * r %*% gp$invVarMatrix %*%
t(r) * gp$sig2
if (v < 0)
return(0)
return(sqrt(v))
}
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
X <- matrix(runif(50),50,1)
Z <- sin(2*pi*X)+rnorm(50,0,.1)
plot(X,Z)
mod <- mlegp(X=X,Z=Z,nugget=FALSE)
#plot(mod)
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1))
predict.gp(mod,matrix(seq(from=0,to=1,length.out = 100),100,1),se.fit = T)
calcPredictionError
calcPredictionError(mod,X)
mlegp::calcPredictionError(mod,X)
calcPredictionError <-
function (gp, newData, nugget = 0)
{
print('new ish')
r = calcCorOneObs(gp$X, gp$beta, gp$a, newData)
v = gp$sig2 + nugget - gp$sig2 * r %*% gp$invVarMatrix %*%
t(r) * gp$sig2
print((1- sum(solve(gp$invVarMatrix,r)))^2 / (sum(gp$invVarMatrix)))
if (v < 0)
return(0)
return(sqrt(v))
}
calcPredictionError(mod,X)
calcPredictionError <-
function (gp, newData, nugget = 0)
{
print('new ish')
r = calcCorOneObs(gp$X, gp$beta, gp$a, newData)
v = gp$sig2 + nugget - gp$sig2 * r %*% gp$invVarMatrix %*%
t(r) * gp$sig2
print((1- sum(solve(gp$invVarMatrix,t(r))))^2 / (sum(gp$invVarMatrix)))
if (v < 0)
return(0)
return(sqrt(v))
}
calcPredictionError(mod,X)
data.frame( x1 = c(2.23,2.57,3.87,3.1,3.39,2.83,3.02,2.14,3.04,3.26,3.39,2.35,2.76,3.9,3.16),
x2 = c(9.66,8.94,4.4,6.64,4.91,8.52,8.04,9.05,7.71,5.11,5.05,8.51,6.59,4.9,6.96),
y  = c(12.37,12.66,12,11.93,11.06,13.03,13.13,11.44,12.86,10.84,11.2,11.56,10.83,12.63,12.46)
)
ham <- data.frame( x1 = c(2.23,2.57,3.87,3.1,3.39,2.83,3.02,2.14,3.04,3.26,3.39,2.35,2.76,3.9,3.16),
x2 = c(9.66,8.94,4.4,6.64,4.91,8.52,8.04,9.05,7.71,5.11,5.05,8.51,6.59,4.9,6.96),
y  = c(12.37,12.66,12,11.93,11.06,13.03,13.13,11.44,12.86,10.84,11.2,11.56,10.83,12.63,12.46)
)
pairs(ham)
cor(ham)
lm(y ~ ., ham)
summary(lm.ham)
lm.ham <- lm(y ~ ., ham)
summary(lm.ham)
n <- 20
ssep <- c(950,720,630,540,595,425,510,400)
mst <- ssep[1]/(n-1)
p <- c(0,1,1,1,2,2,2,3)
errordf <- n-(p+1)
msep <- ssep/errordf
r2adjp <- 1 - msep / mst
r2adjp
sig2hat <- msep[length(msep)]
Cp <- ssep/sig2hat + 2*(p+1) - n
Cp
library(knitr)
knitr::kable(ham)
r2adjp <- 1 - msep / mst
sig2hat <- msep[length(msep)]
Cp <- ssep/sig2hat + 2*(p+1) - n
AICp <- n*log(ssep/n) + 2*(p+1)
tabledat <- data.frame('$SSE_p$'=ssep,p,errordf,msep,r2adjp,Cp,AICp)
tabledat
variablesinmodel <- c('None','$x_1$','$x_2$','$x_3$','$x_1$,$x_2$','$x_1$,$x_3$','$x_2$,$x_3$','$x_1$,$x_2$,$x_3$')
n <- 20
ssep <- c(950,720,630,540,595,425,510,400)
mst <- ssep[1]/(n-1)
p <- c(0,1,1,1,2,2,2,3)
errordf <- n-(p+1)
msep <- ssep/errordf
r2adjp <- 1 - msep / mst
sig2hat <- msep[length(msep)]
Cp <- ssep/sig2hat + 2*(p+1) - n
AICp <- n*log(ssep/n) + 2*(p+1)
tabledat <- data.frame(variablesinmodel,ssep,p,errordf,msep,r2adjp,Cp,AICp)
knitr::kable(tabledat,col.names = c('$SSE_p$','$p$', 'Error d.f.' , 'MSE$_p$' , '$R^2_{adj,p}$', '$C_p$' ,'AIC$_p$'),align='l')
pairs(ham)
cor(ham)
lm.ham <- lm(y ~ ., ham)
summary(lm.ham)
summary(lm(y~x1,ham))
summary(lm(y~x2,ham))
cor(ham)
lm.ham
3.097*ham$x1 + 1.032*ham$x2
ham
3.097*ham$x1 + 1.032*ham$x2
cars
str(cars)
((ssep[2:4] - ssep[1])/1)/(ssep[2:4/(n-(1+1)))
((ssep[2:4] - ssep[1])/1)/(ssep[2:4/(n-(1+1))
((ssep[2:4] - ssep[1])/1)
((ssep[2:4] - ssep[1])/1)/(ssep[2:4/(n-(1+1)))
(ssep[2:4/(n-(1+1)))
((ssep[2:4] - ssep[1])/1)/(ssep[2:4]/(n-(1+1)))
((ssep[1] - ssep[2:4])/1)/(ssep[2:4]/(n-(1+1)))
((ssep[1] - ssep[6:7])/1)/(ssep[6:7]/(n-(2+1)))
((ssep[4] - ssep[6:7])/1)/(ssep[6:7]/(n-(2+1)))
((ssep[1] - ssep[2:4])/1)/(ssep[2:4]/(n-(1+1)))
((ssep[4] - ssep[6:7])/1)/(ssep[6:7]/(n-(2+1)))
((ssep[2] - ssep[6])/1)/(ssep[6]/(n-(2+1)))
((ssep[6] - ssep[8])/1)/(ssep[8]/(n-(2+1)))
library(glmnet)
car
cars
citation('stats')
x <- c(.0006,.04,30,900)
stripchart(X)
stripchart(x)
x <- c(.0006,.04,30,350,900)
stripchart(x)
stripchart(x,xact='n')
stripchart(x,xaxt='n')
warnings()
axis(1, at=1:10, labels=letters[1:10])
axis(1, at=c(.05,500), labels=letters[1:2])
stripchart(x,xaxt='n')
xaxisat = c(.05,500)
xaxisat = c(.05,500)
axis(1, at=xaxisat, labels=xaxisat)
stripchart(x,xaxt='n')
stripchart(x,xaxt='y')
stripchart(x,xaxt=NULL)
abcdef <- NULL
abcdef
stripchart(x,xaxt='n')
xaxisat = NULL
axis(1, at=xaxisat, labels=xaxisat)
stripchart(x)
x <- c(.0006,.04,30,350,900,3800,11000)
stripchart(x,xaxt='n')
stripchart(x)
x <- c(.0006,.04,30,350,900,3800,11000,56911)
stripchart(x,xaxt='n')
stripchart(x)
x <- c(.0006,.04,30,350,900,3800,11000,56911,200000)
stripchart(x,xaxt='n')
stripchart(x)
format(x,scientific = F)
axis(1, at=xaxisat, labels=xaxisat)
x <- c(.0006,.04,30,350,900,3800,11000,56911,200000,1e10)
stripchart(x,xaxt='n')
stripchart(x)
axis(1, at=xaxisat, labels=xaxisat)
options()
options()$scipen
stripchart(x)
stripchart(x,xaxt='n')
xaxisat = c(.05,500)
axis(1, at=xaxisat, labels=xaxisat)
x <- c(.0006,.04,30,350)#,900,3800,11000,56911,200000,1e10)
stripchart(x,xaxt='n')
axis(1, at=xaxisat, labels=xaxisat)
x <- c(.0006,.04,30,350,900)#,3800,11000,56911,200000,1e10)
stripchart(x,xaxt='n')
axis(1, at=xaxisat, labels=xaxisat)
axis(1, at=xaxisat, labels=xaxisat,cex.axis=4)
library(lhs)
citation(lhs)
citation('lhs')
x1 = c(0,0)
x2 = c(1,1)
X = rbind(x1,x2)
plot(X)
m2 <- function(xx){sum(xx^2)}
b = (m2(x2)-m2(x1)) / m2(x1-x2)
b
m2(x1-x2)
m2(x2-x1)
mu = 4 / m2(x1-x2)
w = 2*(x1-x2) / m2(x1-x2)
w
pf <- function(xx){sum(xx*w)+b}
pf(x1)
pf(x2)
pf(c(.5,.5))
pf(c(1,0))
pf(c(0,1))
pf(c(0,100))
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/SMED_1D.R')
SMED_1D(function(xx)dbeta(xx,4,2),n=30)
SMED_1D(dnorm,xmin=-3,xmax=3,n=30)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/SMED_2D.R')
setwd("C:/Users/cbe117/School/DOE/SMED/SMED-Code")
source('TestFunctions.R')
SMED_2D(banana,n=10,max.time=.2)
SMED_2D(banana,n=40,max.time=.2)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/SMED_GP_2D.R')
setwd("C:/Users/cbe117/School/DOE/SMED/SMED-Code")
source('TestFunctions.R')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
warnings()
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp',continue.option=T)
keep.Delta
X[keep.Delta,]
my.filled.contour.func(function(xx){log.f_min((xx,X[keep.Delta,],kk=k,mod=mod))},n=30)
my.filled.contour.func(function(xx){log.f_min(xx,X[keep.Delta,],kk=k,mod=mod)},n=30)
opt.out <- rgenoud::genoud(fn=function(xx){points(xx[1],xx[2],pch=19,cex=.1,col=3);log(f_min(xx,X[keep.Delta,],kk=k,mod=mod))}
,nvars=2,max.generations=3,hard.generation.limit=T
,Domains=matrix(c(0,0,1,1),2,2,byrow=F),boundary.enforcement=T,pop.size=50
,print.level=0
)
opt.out
library('lhs')
lhs::maximinLHS
lhs::randomLHS
