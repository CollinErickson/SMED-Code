for(i in 1:(length(nms)-1)) {
for (j in (i+1):length(nms)) {
if(nms[i]%in%nms.cor  & nms[j]%in%nms.cor) {
if(nba.cor.cg[[as.character(TEAM_ID)]][[2]][as.character(nms[i]),as.character(nms[j])]>=min.games.played.together){
newval <- nba.cor.cg[[as.character(TEAM_ID)]][[1]][as.character(nms[i]),as.character(nms[j])]
cm[i,j] <- newval
cm[j,i] <- newval
}
}
}
}
if(min(eigen(cm)$val) >=0) {
break
} else {
print(c(min.games.played.together,min(eigen(cm)$val)))
min.games.played.together <- min.games.played.together + 5
if (min.games.played.together>50) {browser()}
}
}
return(cm)
}
nbacor <- get.cor.and.cg.all(nba)
# Gives correlation matrices for fan dual
sal2.cms <- dlply(sal2,.(TEAM_ID),sal2.get.cor,nbacor)
cm
sal2.get.cor <- function(x,nba.cor.cg) {
# Test: x <- sal2[sal2$Team=='ATL',]
TEAM_ID <- x$TEAM_ID[1]
#browser()
nms <- x$PLAYER_ID # Names of players on team
#cm <- diag(length(nms))
#matrix(0,length(nms),length(nms),dimnames = list(nms,nms)) # correlation matrix
dimnames(cm) <- list(nms,nms)
nms.cor <- dimnames(nba.cor.cg[[as.character(TEAM_ID)]][[1]])[[1]]
min.games.played.together = 5
while(T) {
cm <- diag(length(nms))
for(i in 1:(length(nms)-1)) {
for (j in (i+1):length(nms)) {
if(nms[i]%in%nms.cor  & nms[j]%in%nms.cor) {
if(nba.cor.cg[[as.character(TEAM_ID)]][[2]][as.character(nms[i]),as.character(nms[j])]>=min.games.played.together){
newval <- nba.cor.cg[[as.character(TEAM_ID)]][[1]][as.character(nms[i]),as.character(nms[j])]
cm[i,j] <- newval
cm[j,i] <- newval
}
}
}
}
if(min(eigen(cm)$val) >=0) {
break
} else {
print(c(min.games.played.together,min(eigen(cm)$val)))
min.games.played.together <- min.games.played.together + 5
if (min.games.played.together>50) {browser()}
}
}
return(cm)
}
nbacor <- get.cor.and.cg.all(nba)
# Gives correlation matrices for fan dual
sal2.cms <- dlply(sal2,.(TEAM_ID),sal2.get.cor,nbacor)
sal2.get.cor <- function(x,nba.cor.cg) {
# Test: x <- sal2[sal2$Team=='ATL',]
TEAM_ID <- x$TEAM_ID[1]
#browser()
nms <- x$PLAYER_ID # Names of players on team
#cm <- diag(length(nms))
#matrix(0,length(nms),length(nms),dimnames = list(nms,nms)) # correlation matrix
#dimnames(cm) <- list(nms,nms)
nms.cor <- dimnames(nba.cor.cg[[as.character(TEAM_ID)]][[1]])[[1]]
min.games.played.together = 5
while(T) {
cm <- diag(length(nms))
dimnames(cm) <- list(nms,nms)
for(i in 1:(length(nms)-1)) {
for (j in (i+1):length(nms)) {
if(nms[i]%in%nms.cor  & nms[j]%in%nms.cor) {
if(nba.cor.cg[[as.character(TEAM_ID)]][[2]][as.character(nms[i]),as.character(nms[j])]>=min.games.played.together){
newval <- nba.cor.cg[[as.character(TEAM_ID)]][[1]][as.character(nms[i]),as.character(nms[j])]
cm[i,j] <- newval
cm[j,i] <- newval
}
}
}
}
if(min(eigen(cm)$val) >=0) {
break
} else {
print(c(min.games.played.together,min(eigen(cm)$val)))
min.games.played.together <- min.games.played.together + 5
if (min.games.played.together>50) {browser()}
}
}
return(cm)
}
nbacor <- get.cor.and.cg.all(nba)
# Gives correlation matrices for fan dual
sal2.cms <- dlply(sal2,.(TEAM_ID),sal2.get.cor,nbacor)
sal2.get.cor <- function(x,nba.cor.cg) {
# Test: x <- sal2[sal2$Team=='ATL',]
TEAM_ID <- x$TEAM_ID[1]
#browser()
nms <- x$PLAYER_ID # Names of players on team
#cm <- diag(length(nms))
#matrix(0,length(nms),length(nms),dimnames = list(nms,nms)) # correlation matrix
#dimnames(cm) <- list(nms,nms)
nms.cor <- dimnames(nba.cor.cg[[as.character(TEAM_ID)]][[1]])[[1]]
min.games.played.together = 5
while(T) {
cm <- diag(length(nms))
dimnames(cm) <- list(nms,nms)
for(i in 1:(length(nms)-1)) {
for (j in (i+1):length(nms)) {
if(nms[i]%in%nms.cor  & nms[j]%in%nms.cor) {
if(nba.cor.cg[[as.character(TEAM_ID)]][[2]][as.character(nms[i]),as.character(nms[j])]>=min.games.played.together){
newval <- nba.cor.cg[[as.character(TEAM_ID)]][[1]][as.character(nms[i]),as.character(nms[j])]
cm[i,j] <- newval
cm[j,i] <- newval
}
}
}
}
if(min(eigen(cm)$val) >=0) {
break
} else {
print(c(min.games.played.together,min(eigen(cm)$val)))
min.games.played.together <- min.games.played.together + 5
if (min.games.played.together>50) {
break
}
}
}
return(cm)
}
nbacor <- get.cor.and.cg.all(nba)
# Gives correlation matrices for fan dual
sal2.cms <- dlply(sal2,.(TEAM_ID),sal2.get.cor,nbacor)
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
library(plyr)
nba <- convert.raw.nba("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\2015Season20160211.csv")
FD.nba.conversion <- read.csv("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\FD.nba.conversion.csv")
sal <- read.csv("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\FDSalaryNow_2_8_16.csv",stringsAsFactors=F)
res <- read.csv("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\FDResults_2_8_16.csv",stringsAsFactors=F)
#fit.LM.2(nba,sal,res)
sal2a <- fit.LM.2.w.error(nba,sal,res)
sal2 <- sal2[-which(is.na(sal2a$PLAYER_ID)),]
sal2 <- sal2a[-which(is.na(sal2a$PLAYER_ID)),]
sal2.get.cor <- function(x,nba.cor.cg) {
# Test: x <- sal2[sal2$Team=='ATL',]
TEAM_ID <- x$TEAM_ID[1]
#browser()
nms <- x$PLAYER_ID # Names of players on team
#cm <- diag(length(nms))
#matrix(0,length(nms),length(nms),dimnames = list(nms,nms)) # correlation matrix
#dimnames(cm) <- list(nms,nms)
nms.cor <- dimnames(nba.cor.cg[[as.character(TEAM_ID)]][[1]])[[1]]
min.games.played.together = 5
while(T) {
cm <- diag(length(nms))
dimnames(cm) <- list(nms,nms)
for(i in 1:(length(nms)-1)) {
for (j in (i+1):length(nms)) {
if(nms[i]%in%nms.cor  & nms[j]%in%nms.cor) {
if(nba.cor.cg[[as.character(TEAM_ID)]][[2]][as.character(nms[i]),as.character(nms[j])]>=min.games.played.together){
newval <- nba.cor.cg[[as.character(TEAM_ID)]][[1]][as.character(nms[i]),as.character(nms[j])]
cm[i,j] <- newval
cm[j,i] <- newval
}
}
}
}
if(min(eigen(cm)$val) >=0) {
break
} else {
print(c(min.games.played.together,min(eigen(cm)$val)))
min.games.played.together <- min.games.played.together + 5
if (min.games.played.together>50) {
break
}
}
}
return(cm)
}
nbacor <- get.cor.and.cg.all(nba)
# Gives correlation matrices for fan dual
sal2.cms <- dlply(sal2,.(TEAM_ID),sal2.get.cor,nbacor)
library(MASS)
# DOESNT WORK, has 1 neg e-val, -.5, needs to be pos def
MASS::mvrnorm(1,rep(0,15),sal2.cms[[1]])
tmat <- sal2.cms[[1]]
eigen(tmat)$val
eigen(tmat+diag(.52,15))$val
tmat.cov <- tmat
tmat.cov.nms <- dimnames(tmat)[[1]]
for (i in 1:length(tmat.cov.nms)) {
tmat.cov[i,] <- tmat.cov[i,] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
tmat.cov[,i] <- tmat.cov[,i] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
}
eigen(tmat.cov)$val
MASS::mvrnorm(1,rep(0,15),tmat.cov)
length(sal2.cms)
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
cor.to.cov <- function(tmat,sal2) {
tmat.cov <- tmat
tmat.cov.nms <- dimnames(tmat)[[1]]
for (i in 1:length(tmat.cov.nms)) {
tmat.cov[i,] <- tmat.cov[i,] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
tmat.cov[,i] <- tmat.cov[,i] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
}
return(tmat.cov)
}
cor.to.cov(tmat,sal2)
eigen(cor.to.cov(tmat,sal2))
all.covs <- lapply(sal2.cms,cor.to.cov)
all.covs <- lapply(sal2.cms,cor.to.cov,sal2)
str(all.covs)
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
nbacor <- get.cor.and.cg.all(nba)
library(plyr)
nba <- convert.raw.nba("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\2015Season20160211.csv")
FD.nba.conversion <- read.csv("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\FD.nba.conversion.csv")
sal <- read.csv("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\FDSalaryNow_2_8_16.csv",stringsAsFactors=F)
res <- read.csv("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\FDResults_2_8_16.csv",stringsAsFactors=F)
sal2a <- fit.LM.2.w.error(nba,sal,res)
sal2 <- sal2a[-which(is.na(sal2a$PLAYER_ID)),]
nbacor <- get.cor.and.cg.all(nba)
str(nbacor)
length(nbacor)
length(nbacor[[1]])
nbacor[[1]]
sal2.get.cor <- function(x,nba.cor.cg) {
# Takes in a sal for a team along with nba.cor.cg
# and returns a correlation matrix for those players
# Test: x <- sal2[sal2$Team=='ATL',]
TEAM_ID <- x$TEAM_ID[1]
#browser()
nms <- x$PLAYER_ID # Names of players on team
#cm <- diag(length(nms))
#matrix(0,length(nms),length(nms),dimnames = list(nms,nms)) # correlation matrix
#dimnames(cm) <- list(nms,nms)
nms.cor <- dimnames(nba.cor.cg[[as.character(TEAM_ID)]][[1]])[[1]]
min.games.played.together = 5
while(T) {
cm <- diag(length(nms))
dimnames(cm) <- list(nms,nms)
for(i in 1:(length(nms)-1)) {
for (j in (i+1):length(nms)) {
if(nms[i]%in%nms.cor  & nms[j]%in%nms.cor) {
if(nba.cor.cg[[as.character(TEAM_ID)]][[2]][as.character(nms[i]),as.character(nms[j])]>=min.games.played.together){
newval <- nba.cor.cg[[as.character(TEAM_ID)]][[1]][as.character(nms[i]),as.character(nms[j])]
cm[i,j] <- newval
cm[j,i] <- newval
}
}
}
}
if(min(eigen(cm)$val) >=0) {
break
} else {
print(c(min.games.played.together,min(eigen(cm)$val)))
min.games.played.together <- min.games.played.together + 5
if (min.games.played.together>50) {
break
}
}
}
# Then create covariance matrix
tmat.cov <- cm
tmat.cov.nms <- dimnames(cm)[[1]]
for (i in 1:length(tmat.cov.nms)) {
tmat.cov[i,] <- tmat.cov[i,] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
tmat.cov[,i] <- tmat.cov[,i] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
}
return(list(cor=cm,cov=tmat.cov)
}
sal2.get.cor <- function(x,nba.cor.cg) {
# Takes in a sal for a team along with nba.cor.cg
# and returns a correlation matrix for those players
# Test: x <- sal2[sal2$Team=='ATL',]
TEAM_ID <- x$TEAM_ID[1]
#browser()
nms <- x$PLAYER_ID # Names of players on team
#cm <- diag(length(nms))
#matrix(0,length(nms),length(nms),dimnames = list(nms,nms)) # correlation matrix
#dimnames(cm) <- list(nms,nms)
nms.cor <- dimnames(nba.cor.cg[[as.character(TEAM_ID)]][[1]])[[1]]
min.games.played.together = 5
while(T) {
cm <- diag(length(nms))
dimnames(cm) <- list(nms,nms)
for(i in 1:(length(nms)-1)) {
for (j in (i+1):length(nms)) {
if(nms[i]%in%nms.cor  & nms[j]%in%nms.cor) {
if(nba.cor.cg[[as.character(TEAM_ID)]][[2]][as.character(nms[i]),as.character(nms[j])]>=min.games.played.together){
newval <- nba.cor.cg[[as.character(TEAM_ID)]][[1]][as.character(nms[i]),as.character(nms[j])]
cm[i,j] <- newval
cm[j,i] <- newval
}
}
}
}
if(min(eigen(cm)$val) >=0) {
break
} else {
print(c(min.games.played.together,min(eigen(cm)$val)))
min.games.played.together <- min.games.played.together + 5
if (min.games.played.together>50) {
break
}
}
}
# Then create covariance matrix
tmat.cov <- cm
tmat.cov.nms <- dimnames(cm)[[1]]
for (i in 1:length(tmat.cov.nms)) {
tmat.cov[i,] <- tmat.cov[i,] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
tmat.cov[,i] <- tmat.cov[,i] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
}
return(list(cor=cm,cov=tmat.cov))
}
sal2.cms <- dlply(sal2,.(TEAM_ID),sal2.get.cor,nbacor)
sal2.cms
length(sal2.cms)
sal2.cms[[1]]
sal2.cor.and.cov <- dlply(sal2,.(TEAM_ID),sal2.get.cor,nbacor)
View(sal2)
numeric(10)
numeric(10)->temp
temp
names(temp) <- 1:10
temp
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
sal2.get.cor <- function(x,nba.cor.cg,sal2) {
# Takes in a sal for a team along with nba.cor.cg
# and returns a correlation matrix for those players
# Test: x <- sal2[sal2$Team=='ATL',]
TEAM_ID <- x$TEAM_ID[1]
#browser()
nms <- x$PLAYER_ID # Names of players on team
#cm <- diag(length(nms))
#matrix(0,length(nms),length(nms),dimnames = list(nms,nms)) # correlation matrix
#dimnames(cm) <- list(nms,nms)
nms.cor <- dimnames(nba.cor.cg[[as.character(TEAM_ID)]][[1]])[[1]]
min.games.played.together = 5
while(T) {
cm <- diag(length(nms))
dimnames(cm) <- list(nms,nms)
for(i in 1:(length(nms)-1)) {
for (j in (i+1):length(nms)) {
if(nms[i]%in%nms.cor  & nms[j]%in%nms.cor) {
if(nba.cor.cg[[as.character(TEAM_ID)]][[2]][as.character(nms[i]),as.character(nms[j])]>=min.games.played.together){
newval <- nba.cor.cg[[as.character(TEAM_ID)]][[1]][as.character(nms[i]),as.character(nms[j])]
cm[i,j] <- newval
cm[j,i] <- newval
}
}
}
}
if(min(eigen(cm)$val) >=0) {
break
} else {
print(c(min.games.played.together,min(eigen(cm)$val)))
min.games.played.together <- min.games.played.together + 5
if (min.games.played.together>50) {
break
}
}
}
# Then create covariance matrix
tmat.cov <- cm
tmat.cov.nms <- dimnames(cm)[[1]]
for (i in 1:length(tmat.cov.nms)) {
tmat.cov[i,] <- tmat.cov[i,] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
tmat.cov[,i] <- tmat.cov[,i] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
}
# Get predicted mean from sal2, column is LM.2.pred
means <- numeric(length(tmat.cov.nms))
names(means) <- tmat.cov.nms
for(i in 1:length(tmat.cov.nms)) {
nm.this <- as.character(tmat.cov.nms[i])
means[nm.this] <- sal2$LM.2.pred[as.character(sal2$PLAYER_ID)==nm.this]
}
return(list(mu=means,cor=cm,cov=tmat.cov))
}
sal2.cor.and.cov <- dlply(sal2,.(TEAM_ID),sal2.get.cor,nbacor,sal2)
sal2.cor.and.cov
length(sal2.cor.and.cov)
length(sal2.cor.and.cov[[1]])
sal2.cor.and.cov[[1]]
sal2.cor.and.cov[[1]]
sqrt(93.2379/500)
sqrt((93.2379-314*.00045723+314*1e-8)/500)
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
library(plyr)
nba <- convert.raw.nba("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\2015Season20160211.csv")
FD.nba.conversion <- read.csv("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\FD.nba.conversion.csv")
sal <- read.csv("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\FDSalaryNow_2_8_16.csv",stringsAsFactors=F)
res <- read.csv("C:\\Users\\cbe117\\School\\SportsAnalytics\\NBA\\FDResults_2_8_16.csv",stringsAsFactors=F)
sal2a <- fit.LM.2.w.error(nba,sal,res)
sal2 <- sal2a[-which(is.na(sal2a$PLAYER_ID)),]
sal2.get.cor <- function(x,nba.cor.cg,sal2) {
# Takes in a sal for a team along with nba.cor.cg
# and returns a correlation matrix for those players
# Test: x <- sal2[sal2$Team=='ATL',]
TEAM_ID <- x$TEAM_ID[1]
#browser()
nms <- x$PLAYER_ID # Names of players on team
#cm <- diag(length(nms))
#matrix(0,length(nms),length(nms),dimnames = list(nms,nms)) # correlation matrix
#dimnames(cm) <- list(nms,nms)
nms.cor <- dimnames(nba.cor.cg[[as.character(TEAM_ID)]][[1]])[[1]]
min.games.played.together = 5
while(T) {
cm <- diag(length(nms))
dimnames(cm) <- list(nms,nms)
for(i in 1:(length(nms)-1)) {
for (j in (i+1):length(nms)) {
if(nms[i]%in%nms.cor  & nms[j]%in%nms.cor) {
if(nba.cor.cg[[as.character(TEAM_ID)]][[2]][as.character(nms[i]),as.character(nms[j])]>=min.games.played.together){
newval <- nba.cor.cg[[as.character(TEAM_ID)]][[1]][as.character(nms[i]),as.character(nms[j])]
cm[i,j] <- newval
cm[j,i] <- newval
}
}
}
}
if(min(eigen(cm)$val) >=0) {
break
} else {
print(c(min.games.played.together,min(eigen(cm)$val)))
min.games.played.together <- min.games.played.together + 5
if (min.games.played.together>50) {
break
}
}
}
# Then create covariance matrix
tmat.cov <- cm
tmat.cov.nms <- dimnames(cm)[[1]]
for (i in 1:length(tmat.cov.nms)) {
tmat.cov[i,] <- tmat.cov[i,] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
tmat.cov[,i] <- tmat.cov[,i] * sal2$LM.2.pred.se[sal2$PLAYER_ID==tmat.cov.nms[i]]
}
# Get predicted mean from sal2, column is LM.2.pred
means <- numeric(length(tmat.cov.nms))
names(means) <- tmat.cov.nms
for(i in 1:length(tmat.cov.nms)) {
nm.this <- as.character(tmat.cov.nms[i])
means[nm.this] <- sal2$LM.2.pred[as.character(sal2$PLAYER_ID)==nm.this]
}
return(list(mu=means,cor=cm,cov=tmat.cov))
}
nbacor <- get.cor.and.cg.all(nba)
sal2.cor.and.cov <- dlply(sal2,.(TEAM_ID),sal2.get.cor,nbacor,sal2)
library(MASS)
length(sal2.cor.and.cov)
sal2.cor.and.cov[[1]]
get.samples <- function(mcc.team,n) {
MASS::mvrnorm(n=n,mu=mcc[[1]],Sigma=[[3]])
}
get.samples <- function(mcc.team,n) {
MASS::mvrnorm(n=n,mu=mcc[[1]],Sigma=[[3]])
get.samples <- function(mcc.team,n) {
MASS::mvrnorm(n=n,mu=mcc[[1]],Sigma=mcc[[3]])
}
get.samples(sal2.cor.and.cov[[1]],1)
get.samples <- function(mcc.team,n) {
MASS::mvrnorm(n=n,mu=mcc.team[[1]],Sigma=mcc.team[[3]])
}
get.samples(sal2.cor.and.cov[[1]],1)
get.samples(sal2.cor.and.cov[[1]],2)
t(get.samples(sal2.cor.and.cov[[1]],2))
lapply(sal2.cor.and.cov,2,get.samples)
lapply(sal2.cor.and.cov,get.samples,2)
lapply(sal2.cor.and.cov,get.samples,2)
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
get.nba.samples()
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
get.nba.samples()
get.nba.samples(5)
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
write.out.nba.samples(n.samples = 500)
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
write.out.nba.samples(n.samples = 500)
lapply(sal2.cor.and.cov,get.samples,n.samples)
get.samples(sal2.cor.and.cov[[1]],2)
sal2.cor.and.cov
sal
View(sal)
source('C:/Users/cbe117/School/SportsAnalytics/NBA/nba_functions.R')
write.out.nba.samples(n.samples = 500)
lapply(sal2.cor.and.cov,get.samples,n.samples)
head(names(lapply(sal2.cor.and.cov,get.samples,n.samples)))
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/SMED_GP_2D.R')
setwd("C:/Users/cbe117/School/DOE/SMED/SMED-Code")
source('TestFunctions.R')
SMED_GP_2D(f=banana,n0=10,n=10,max.time=.2)
source('C:/Users/cbe117/School/DOE/SMED/SMED-Code/SMED_GP_2D.R')
SMED_GP_2D(f=banana,n0=10,n=30,contour.fit=1,GP.package='mlegp')
SMED_GP_2D(f=banana,n0=50,n=5,contour.fit=1,GP.package='laGP',continue.option=T)
Y
summary(Y)
predict.GP.SMED(mod,c(.5,0))
predict.GP.SMED(mod,c(.5,.8))
predict.GP.SMED(mod,c(.5,.9))
predict.GP.SMED(mod,c(.5,.97))
SMED_GP_2D(f=banana,n0=50,n=5,contour.fit=1,GP.package='GPfit',continue.option=T)
SMED_GP_2D(f=banana,n0=50,n=5,contour.fit=1,GP.package='mlegp',continue.option=T)
